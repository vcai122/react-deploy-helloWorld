{"version":3,"sources":["logo.svg","components/Hello.js","components/Message.js","components/Counter.js","components/ClassClick.js","components/FunctionClick.js","components/ChildComponent.js","components/ParentComponent.js","components/ConditionalGreetings.js","components/Form.js","components/Table.js","components/PureComp.js","components/RegComp.js","components/Timer.js","components/ParentComp.js","components/DumbTest.js","components/PostList.js","components/TimerApp.js","ClickyGameComponents/Timer.js","ClickyGameComponents/Button.js","ClickyGameComponents/UserinfoAndShop.js","ClickyGameComponents/Game.js","App.js","components/SpreadSheet.js","serviceWorker.js","index.js"],"names":["module","exports","Component","FunctionClick","ChildComponent","props","onClick","greetHandler","Table","PureComp","this","name","PureComponent","RegComp","Timer","startTime","myInterval","setInterval","calculateNewStates","setState","runState","stopTime","clearInterval","resetTime","ms","s","m","state","mNew","sNew","msNew","size","w","w2","style","fontWeight","fontSize","tableLayout","textAlign","color","width","timerStyle","marginLeft","marginRight","marginTop","fontFamily","updateState","colonClickNum","setTimeout","endGame","handleClickColon","prevState","toggleCheat","buttonStyle","padding","borderRadius","backgroundColor","height","Button","startButton","started","increment","resetButton","textStyleLeft","float","textStyleRight","UserinfoAndShop","loadUsers","a","doc","loadInfo","sheet","sheetsByIndex","getRows","rows","spreadSheetRows","serachForUser","inputUsername","Username","toUpperCase","low","high","totalUsers","index","mid","Math","floor","compareName","User","window","confirm","createAccount","userID","ID","loggedIn","clicks","Clicks","updatedClicks","addRow","AllUsers","AllClicks","AllCurrBackground","All1","All2","All3","login","prompt","loadShop","alert","updateClicks","count","updateClicksToDatabase","cellAdress","loadCells","getCellByA1","value","saveUpdatedCells","resetUpdatedClicks","accountForUpdatedClicks","GoogleSpreadsheet","require","counterStyle","Game","accessSpread","useServiceAccountAuth","client_email","private_key","cheatOn","newState","userinfoRef","current","alertScore","message","score","added","i","Score","userName","addScore","Name","userScore","row","j","AllNames","AllScores","timerRef","React","createRef","ref","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"iKAAAA,EAAOC,QAAU,IAA0B,kC,2ZCEvBC,YCAEA,YCAAA,YCAGA,YCWVC,I,QCHAC,MARf,SAAwBC,GACpB,OACI,6BACI,4BAAQC,QAAW,kBAAMD,EAAME,aAAa,WAA5C,gBCFkBL,YCDKA,YCAhBA,YCaJM,ICHAC,E,uKARP,OACI,+CACoBC,KAAKL,MAAMM,U,GAJpBC,iBCURC,E,uKARP,OACI,kDACuBH,KAAKL,MAAMM,U,GAJxBT,aCwFPY,GCtFUZ,Y,kDDCrB,WAAYG,GAAQ,IAAD,8BACf,cAAMA,IAUVU,UAAY,WACR,EAAKC,WAAaC,aAAa,WAC3B,EAAKC,uBAhBD,IAkBP,EAAKC,SAAS,CACXC,SAAU,KAhBC,EAoBnBC,SAAW,WACPC,cAAc,EAAKN,YACnB,EAAKG,SAAS,CACVC,SAAU,KAvBC,EA2BnBG,UAAY,WACR,EAAKJ,SAAS,CACVK,GAAI,EACJC,EAAE,EACFC,EAAG,EACHN,SAAU,KA9Bd,EAAKO,MAAQ,CACRH,GAAI,EACJC,EAAE,EACFC,EAAG,EACHN,SAAU,GANA,E,iEAoCE,IAAD,EACCV,KAAKiB,MAAfH,EADS,EACTA,GAAGC,EADM,EACNA,EACNG,EAFY,EACJF,EAERG,EAAOJ,EACPK,EAAQN,EA3CJ,GA4CJM,GAAO,MACPD,IACAC,GAAO,KAEPD,GAAM,KACND,IACAC,GAAM,IAGVnB,KAAKS,SAAS,CACVK,GAAIM,EACJL,EAAGI,EACHH,EAAGE,M,+BAKD,IAAD,EACYlB,KAAKiB,MAAfH,EADF,EACEA,GAAGC,EADL,EACKA,EAAEC,EADP,EACOA,EACLK,EAAQrB,KAAKL,MAAb0B,KACHC,EAAI,IAAID,EACRE,EAAK,IAAKF,EACd,OAEI,gCAAQ,2BAAOG,MAAO,CAClBC,WAAY,OACZC,SAAUL,EACVM,YAAa,QACbC,UAAW,SACXC,MAAO,UAEX,wBAAIL,MAAO,CAAEM,MAAOR,IAApB,IAA2BN,EAAE,GAAI,IAAIA,EAAIA,EAAzC,KACA,wBAAIQ,MAAO,CAAEM,MAAOP,IAApB,OACA,wBAAIC,MAAO,CAAEM,MAAOR,IAApB,IAA2BP,EAAE,GAAI,IAAIA,EAAIA,EAAzC,KACA,wBAAIS,MAAO,CAAEM,MAAOP,IAApB,OACA,wBAAIC,MAAO,CAAEM,MAAOR,IAApB,IAA2BR,EAAG,IAAK,IAAIA,EAAG,GAAKA,EAAG,GAAlD,W,GA7EQtB,c,GEFGA,Y,mBCCAA,YCAAA,Y,uBCAjBuC,EAAa,CACfL,SAAU,MACVC,YAAa,QACbE,MAAO,QACPG,WAAY,OACZC,YAAa,OACbC,UAAW,IACXC,WAAY,kBA2FD/B,E,kDAvFX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IAUVU,UAAY,WACR,EAAKC,WAAaC,aAAa,WAC3B,EAAKC,uBAzBD,IA2BR,EAAKb,MAAMyC,YAAY,IAfR,EAkBnBzB,SAAW,WACPC,cAAc,EAAKN,YACnB,EAAKX,MAAMyC,YAAY,IApBR,EAuBnBvB,UAAY,WACR,EAAKJ,SAAS,CACVK,GAAI,EACJC,EAAE,EACFC,EAAG,EACHqB,cAAe,IAEnB,EAAK1C,MAAMyC,YAAY,IA9BR,EAiCnB5B,mBAAqB,WAAM,IAAD,EACL,EAAKS,MAAfH,EADe,EACfA,GAAGC,EADY,EACZA,EACNG,EAFkB,EACVF,EAERG,EAAOJ,EACPK,EAAQN,EAjDJ,GAkDJM,GAAO,MACPD,IACAC,GAAO,KAEPD,GAAM,KACND,IACAC,GAAM,IAGV,EAAKV,SAAS,CACVK,GAAIM,EACJL,EAAGI,EACHH,EAAGE,IAGI,IAAPC,IACA,EAAKR,WACL2B,YAAY,WAAK,EAAK3C,MAAM4C,YAAa,KAvD9B,EA2DnBC,iBAAmB,WACf,EAAK/B,UAAU,SAACgC,GAAD,MAAgB,CAC3BJ,cAAeI,EAAUJ,cAAgB,MAE7C,YACqC,IAA7B,EAAKpB,MAAMoB,eAGuB,IAA7B,EAAKpB,MAAMoB,gBAFhB,EAAK1C,MAAM+C,kBA9DnB,EAAKzB,MAAQ,CACTH,GAAI,EACJC,EAAE,EACFC,EAAG,EACHqB,cAAe,GAPJ,E,qDAyET,IAAD,EACcrC,KAAKiB,MAAjBH,EADF,EACEA,GAAIC,EADN,EACMA,EAAGC,EADT,EACSA,EACd,OACI,2BAAOQ,MAASO,GAAa,+BAAO,4BAChC,wBAAIP,MAAO,CAAEM,MAAO,UAApB,IAAiCd,EAAE,GAAI,IAAIA,EAAIA,EAA/C,KACA,wBAAIQ,MAAO,CAAEM,MAAO,UAApB,KACA,wBAAIN,MAAO,CAAEM,MAAO,UAApB,IAAiCf,EAAE,GAAI,IAAIA,EAAIA,EAA/C,KACA,wBAAInB,QAASI,KAAKwC,iBAAkBhB,MAAO,CAAEM,MAAO,UAApD,KACA,wBAAIN,MAAO,CAAEM,MAAO,UAApB,IAAiChB,EAAG,IAAK,IAAIA,EAAG,GAAKA,EAAG,GAAxD,Y,GAlFItB,aCXdmD,EAAc,CAChBC,QAAS,EACTC,aAAc,EACdC,gBAAiB,UACjBhB,MAAO,OACPiB,OAAQ,OACRrB,SAAU,MACVS,WAAY,WA6CDa,E,kDAzCX,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IAMVsD,YAAc,WACL,EAAKhC,MAAMiC,UACZ,EAAKvD,MAAMU,YACX,EAAKI,SAAS,CAAGyC,SAAS,KAE9B,EAAKvD,MAAMwD,aAZI,EAenBC,YAAc,WACV,EAAK3C,SAAS,CACVyC,SAAS,IAEb,EAAKvD,MAAMkB,aAjBX,EAAKI,MAAQ,CACRiC,SAAS,GAHC,E,qDAuBf,OACI,oCAC2B,IAAtBlD,KAAKL,MAAMe,UACZ,4BAAQc,MAAOmB,EAAa/C,QAASI,KAAKoD,aAA1C,aAGuB,IAAtBpD,KAAKL,MAAMe,UACZ,4BAAQc,MAAOmB,EAAa/C,QAASI,KAAKL,MAAMwD,YAGzB,IAAtBnD,KAAKL,MAAMe,UACZ,4BAAQc,MAAOmB,EAAa/C,QAASI,KAAKiD,aAA1C,yB,GAnCKzD,aCTfmD,EAAc,CAChBb,MAAO,OACPgB,gBAAiB,UACjBX,WAAY,iBACZT,SAAU,QACVmB,aAAc,GAGZQ,EAAgB,CAClBrB,WAAY,MACZE,UAAW,MACXC,WAAY,iBACZT,SAAU,MACV4B,MAAO,QAGLC,EAAiB,CACnBtB,YAAa,MACbC,UAAW,MACXC,WAAY,iBACZT,SAAU,MACV4B,MAAO,SAqJIE,E,kDAjJX,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IAaV8D,UAdmB,sBAcP,gCAAAC,EAAA,6DACDC,EAAO,EAAKhE,MAAZgE,IADC,kBAGEA,EAAIC,WAHN,cAIEC,EAAQF,EAAIG,cAAc,GAJ5B,SAKeD,EAAME,UALrB,OAKEC,EALF,OAMJ,EAAKvD,SAAS,CACVwD,gBAAiBD,EACjBH,MAAOA,IARP,kDAaJ,EAAKpD,SAAS,CACVwD,gBAAiB,OAdjB,0DAdO,EAiCnBC,cAAgB,SAACC,GAQb,IAR6B,IAEtBF,EAAmB,EAAKhD,MAAxBgD,gBACHG,EAAWD,EAAcE,cACzBC,EAAM,EAAOC,EAAON,EAAgB,GAAGO,WAAW,EAElDC,GAAS,EAENH,GAAOC,GAAK,CACf,IAAIG,EAAMC,KAAKC,OAAON,EAAIC,GAAM,GAM5BM,EAAcZ,EAAgBS,GAAKI,KAAKT,cAC5C,GAAID,EAAWS,EACXN,EAAOG,EAAI,MAEV,MAAIN,EAAWS,GAGhB,CACAJ,EAAQC,EACR,MAJAJ,EAAMI,EAAI,IAQH,IAAXD,EAEeM,OAAOC,QAAP,4DAAoEb,EAApE,+DAEX,EAAKc,cAAcd,GAIvB,EAAK1D,SAAS,CACVyE,OAAQjB,EAAgBQ,GAAOU,GAC/BC,UAAU,EACVhB,SAAUH,EAAgBQ,GAAOK,KACjCO,OAAQpB,EAAgBQ,GAAOa,OAC/BC,cAAuC,IAAxB,EAAK5F,MAAMe,YA1EnB,EAgFnBuE,cAhFmB,uCAgFH,WAAMb,GAAN,eAAAV,EAAA,6DACLG,EAAS,EAAK5C,MAAd4C,MADK,SAENA,EAAM2B,OAAO,CAACC,SAAUrB,EAAUsB,UAAW,EAAGC,kBAAmB,EAAGC,MAAM,EAAOC,MAAM,EAAOC,MAAM,IAFhG,uBAGN,EAAKrC,YAHC,OAIZ,EAAKS,cAAcE,GAJP,2CAhFG,wDAuFnB2B,MAvFmB,sBAuFX,4BAAArC,EAAA,6DACAU,EAAW4B,OAAO,aADlB,SAEE,EAAKvC,YAFP,OAGJ,EAAKS,cAAcE,GAHf,2CAvFW,EA6FnB6B,SAAW,WACPC,MAAM,mCA9FS,EAiGnBC,aAAe,WACP,EAAKlF,MAAMmE,UACX,EAAK3E,UAAS,SAACgC,GAAD,MAAc,CACxB4C,OAAyB,EAAjB5C,EAAU4C,OAAW,EAAK1F,MAAMyG,MACxCb,eAAe,MAEnB,WACI,EAAKc,6BAxGE,EA8GnBA,uBA9GmB,sBA8GM,oCAAA3C,EAAA,+DACU,EAAKzC,MAA7B4C,EADc,EACdA,MAAOqB,EADO,EACPA,OAAOG,EADA,EACAA,OACfiB,EAAa,KAAc,EAAPpB,EAAS,GAFd,SAGfrB,EAAM0C,UAAUD,GAHD,cAIrBzC,EAAM2C,YAAYF,GAAYG,MAAQpB,EAJjB,SAKfxB,EAAM6C,mBALS,2CA9GN,EAwHnBC,mBAAqB,WACjB,EAAKlG,SAAS,CACV8E,eAAe,KAvHnB,EAAKtE,MAAQ,CACTiE,QAAS,EACTE,UAAU,EACVhB,SAAU,KACViB,OAAQ,KACRE,eAAe,EACftB,gBAAiB,KACjBJ,MAAO,MAVI,E,qDA8HT,IAAD,EAC6C7D,KAAKiB,MAAhDmE,EADF,EACEA,SAAShB,EADX,EACWA,SAASiB,EADpB,EACoBA,OAAQE,EAD5B,EAC4BA,cAC1Ba,EAASpG,KAAKL,MAAdyG,MACDQ,EAA0BrB,EAAea,EAAQ,EACvD,OACI,oCACI,0BAAM5E,MAAS6B,GACV+B,EACGhB,EACE,4BAAQxE,QAAWI,KAAK+F,MAAOvE,MAASmB,GAAxC,UAGV,0BAAMnB,MAAS+B,GAAiB8B,GAAM,UAAQA,EAAO,EAAEe,EAAQQ,EAAzB,WACtC,4BAAQhH,QAAWI,KAAKiG,SAAUzE,MAASmB,GAA3C,c,GA5IcnD,aCtBxBmE,EAAM,IAAIkD,EADcC,EAAQ,KAA9BD,mBAC0B,gDAG5BE,EAAe,CACjB5E,WAAY,iBACZT,SAAU,MACVD,WAAY,QA+KDuF,E,kDA3KX,WAAYrH,GAAQ,IAAD,8BACf,cAAMA,IAkBViE,SAnBmB,sBAmBR,8BAAAF,EAAA,+EAEGC,EAAIC,WAFP,cAGGC,EAAQF,EAAIG,cAAc,GAH7B,SAIgBD,EAAME,UAJtB,OAIGC,EAJH,OAKH,EAAKvD,SAAS,CACVwD,gBAAiBD,EACjBH,MAAOA,IAPR,kDAWH,EAAKpD,SAAS,CACVwD,gBAAiB,OAZlB,0DAnBQ,EAoCnBgD,aApCmB,sBAoCJ,sBAAAvD,EAAA,sEAELC,EAAIuD,sBAAsB,CAChCC,aAAc,8DACdC,YAAa,ysDAJF,2CApCI,EA6CnB1E,YAAc,WACV,EAAKjC,UAAS,SAACgC,GAAD,MAAc,CACxB4E,SAAU5E,EAAU4E,aA/CT,EAmDnBlE,UAAY,WACJ,EAAKlC,MAAMoG,QACX,EAAK5G,UAAS,SAACgC,GAAD,MAAgB,CAC1B2D,MAAO3D,EAAU2D,MAAQ,QAI7B,EAAK3F,UAAS,SAACgC,GAAD,MAAgB,CAC1B2D,MAAO3D,EAAU2D,MAAQ,OA3DlB,EAgEnBhE,YAAc,SAACkF,GACX,EAAK7G,SAAS,CACVC,SAAU4G,KAlEC,EAsEnB/E,QAAU,WACN,EAAKgF,YAAYC,QAAQrB,eACzB,EAAKsB,cAxEU,EA2EnBA,WAAa,WAAK,IAIVC,EAHGzD,EAAmB,EAAKhD,MAAxBgD,gBACHmC,EAAQzB,KAAKC,MAAM,EAAK3D,MAAMmF,OAC9BuB,EAAQvB,EAAM,EAGdsB,EADAtB,EAAQ,GACE,iDAELA,EAAQ,GACH,2DAELA,EAAQ,GACH,8BAELA,EAAM,GACD,iCAGA,kCAEdsB,GAAO,0BAAuBtB,EAAvB,mDAAuEuB,EAAvE,yBACPD,GAAW,mBAEX,IADA,IAAIE,GAAQ,EACHC,EAAI,EAAGA,EAAE,EAAGA,IAAI,CACrB,GAAqB,MAAjB5D,EAAuB,CACvByD,GAAS,sCACT,MAEJ,IAAKE,GAASD,EAAQ1D,EAAgB4D,GAAGC,MAAM,CAC3CF,GAAQ,EACR,IAAIG,EAAW/B,OAAO,0BAAD,OAA2B2B,EAA3B,oDACrB,EAAKK,SAASD,EAASJ,EAAME,GAEjCH,GAAS,KAAF,OAAQG,EAAE,EAAV,aAAgB5D,EAAgB4D,GAAGI,KAAnC,aAA4ChE,EAAgB4D,GAAGC,MAA/D,QAEXJ,GAAS,KACTxB,MAAMwB,IA/GS,EAkHnBM,SAlHmB,uCAkHR,WAAMD,EAAUG,EAAWC,GAA3B,qBAAAzE,EAAA,sDAGP,IAHO,EACyB,EAAKzC,MAA9BgD,EADA,EACAA,gBAAgBJ,EADhB,EACgBA,MAEduE,EAAI,EAAGA,GAAGD,EAAKC,IACpBnE,EAAgBmE,EAAE,GAAGH,KAAOhE,EAAgBmE,GAAGH,KAC/ChE,EAAgBmE,EAAE,GAAGN,MAAQ7D,EAAgBmE,GAAGN,MAL7C,OAOP7D,EAAgBkE,GAAKF,KAAOF,EAC5B9D,EAAgBkE,GAAKL,MAAQI,EAC7B,EAAKzH,SAAS,CACVwD,gBAAiBA,IAVd,SAYDJ,EAAM2B,OAAO,CAAE6C,SAAUN,EAAUO,UAAWJ,IAZ7C,2CAlHQ,4DAiInB7H,UAAY,WAAO,EAAKkI,SAASf,QAAQnH,aAjItB,EAmInBQ,UAAY,WACR,EAAK+C,WACL,EAAK2E,SAASf,QAAQ3G,YACtB,EAAKJ,SAAS,CACV2F,MAAO,EACPiB,SAAS,IAGb,EAAKE,YAAYC,QAAQb,sBAzIzB,EAAK4B,SAAWC,IAAMC,YACtB,EAAKlB,YAAciB,IAAMC,YACzB,EAAKxH,MAAQ,CACRmF,MAAO,EACP1F,SAAU,EACV2G,SAAS,EACTpD,gBAAiB,KACjBJ,MAAO,MATG,E,gEAef7D,KAAKiH,eACLjH,KAAK4D,a,+BA8HC,IAAD,EACqB5D,KAAKiB,MAAxBP,EADF,EACEA,SAAU0F,EADZ,EACYA,MACjB,OACI,oCACA,kBAAC,EAAD,CACIzC,IAAOA,EACPyC,MAASA,EACT1F,SAAYA,EACZgI,IAAO1I,KAAKuH,cAEhB,kBAAC,EAAD,CACImB,IAAO1I,KAAKuI,SACZnG,YAAepC,KAAKoC,YACpBG,QAAWvC,KAAKuC,QAChBG,YAAe1C,KAAK0C,cAExB,yBAAKlB,MAASuF,GAAd,WAAqCpC,KAAKC,MAAMwB,GAAhD,KACA,kBAAC,EAAD,CACI/F,UAAWL,KAAKK,UAChBQ,UAAWb,KAAKa,UAChBsC,UAAWnD,KAAKmD,UAChBzC,SAAUA,S,GApKPlB,aC8CJmJ,GCzDWnJ,Y,uKDuBtB,OACE,yBAAKoJ,UAAU,OAGb,kBAAC,EAAD,W,GANUpJ,cEZEqJ,QACW,cAA7B9D,OAAO+D,SAASC,UAEe,UAA7BhE,OAAO+D,SAASC,UAEhBhE,OAAO+D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnC,a","file":"static/js/main.5b145cb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nclass Hello extends Component {\n    render() {\n        const {name, age} = this.props\n        // const {state1, state2} = this.props\n        return (\n            <div id ='hello' className='dummyClass'>\n                <h1>Hello World {name}, you are {age} years old</h1>\n            </div>\n        )\n    }\n}\n\n\n// const Hello = props =>{\n//     //jsx version:\n//     const {name, age} = props\n\n//     return(\n//         <div id ='hello' className='dummyClass'>\n//             <h1>Hello World {name}, you are {age} years old</h1>\n//         </div>\n//     )\n    \n//     // not jsx:\n//     // return React.createElement(\n//     //     'div', \n//     //     {id: 'hello', className: 'dummyClass'}, \n//     //     React.createElement('h1',null,'Hello World'))\n// }\n\nexport default Hello","import React, { Component } from 'react';\n\nclass Message extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            message: 'Welcome to this page!'\n        }\n    }\n\n    changeMessage(){\n        this.setState({\n            message: 'Stupid dumbass'\n        })\n    }\n\n\n    render(){\n        return(\n            <div>\n                <h1>\n                    {this.state.message}\n                </h1>\n                <button onClick = {() => this.changeMessage()}>\n                    Press if you are dumb\n                </button>\n            </div>\n        )\n    }\n\n}\n\nexport default Message","import React, { Component } from 'react'\n\nclass Counter extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count: 0\n        }\n    }\n    \n    increment(){\n        // this.setState({\n        //     count: this.state.count+1\n        // })\n        this.setState((prevState, props) => ({\n            count: prevState.count +1\n            //can use props as well\n        }))\n    }\n\n    increment5(){\n        this.increment()\n        this.increment()\n        this.increment()\n        this.increment()\n        this.increment()\n    }\n\n    render() {\n        return (\n            <div>\n                <div> {this.state.count} </div> \n                <button onClick={()=> this.increment5()}> Increment</button>\n            </div>\n        )\n    }\n}\n\nexport default Counter\n","import React, { Component } from 'react'\n\nclass ClassClick extends Component {\n    \n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             message: 'hi'\n        }\n        // this.clickHandler = this.clickHandler.bind(this)\n    }\n    \n    // clickHandler(){\n    //     this.setState({\n    //         message: 'bye'\n    //     })\n    // }\n\n    clickHandler = () =>{\n        this.setState({\n            message: 'bye'\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>{this.state.message} </div>\n                {/* <button onClick={this.clickHandler.bind(this)}>click me</button> */}\n                {/* <button onClick={()=>this.clickHandler()}>click me</button> */}\n                <button onClick={this.clickHandler}>click me</button>\n                 \n            </div>\n        )\n    }\n}\n\nexport default ClassClick\n","import React from 'react'\n\nfunction FunctionClick() {\n    function clickHandler() {\n        console.log('clicked')\n    }\n    return (\n        <div>\n            <button onClick={clickHandler}>click</button>\n        </div>\n    )\n}\n\nexport default FunctionClick\n","import React from 'react'\n\nfunction ChildComponent(props) {\n    return (\n        <div>\n            <button onClick = {() => props.greetHandler('child')}>greeParent</button>\n        </div>\n    )\n}\n\nexport default ChildComponent\n","import React, { Component } from 'react'\nimport ChildComponent from './ChildComponent'\n\nclass ParentComponent extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             parentName: 'Parent'\n        }\n        this.greetParent = this.greetParent.bind(this)\n    }\n\n    greetParent(childName){\n        alert(`Hello ${this.state.parentName} from ${childName}`)\n    }\n    \n    render() {\n        return (\n            <div>\n                <ChildComponent greetHandler={this.greetParent} />\n            </div>\n        )\n    }\n}\n\nexport default ParentComponent\n\n","import React, { Component } from 'react'\n\nclass ConditionalGreetings extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             loggedIn: true\n        }\n    }\n    \n    render() {\n        return this.state.loggedIn ?(\n            <div>\n                 yes\n            </div>\n        ): (\n            <div>\n                 no\n            </div>\n        )\n    }\n}\n\nexport default ConditionalGreetings\n","import React, { Component } from 'react'\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props)\n    \n       this.state = {\n            username: '',\n            comments: '',\n            choice: 'a'\n        }\n    }\n\n    handleUsernameChange = (e)=> {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handleCommentsChange = (e) =>{\n        this.setState({\n            comments: e.target.value\n        })\n    }\n\n    handleChoiceChange = (e) =>{\n        this.setState({\n            choice: e.target.value\n        })\n    }\n\n    handleSubmit = (e)=>{\n        alert(`${this.state.username} ${this.state.comments} ${this.state.choice}`)\n        e.preventDefault()\n    }\n\n\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label>Username </label>\n                    <input \n                    type = \"text\"\n                    value={this.state.username}\n                    onChange={this.handleUsernameChange} \n                    />\n                </div>\n                <div>\n                    <label>Comments </label>\n                    <textarea\n                    value={this.state.comments} \n                    onChange={this.handleCommentsChange} \n                    />\n                </div>\n                <div>\n                    <label>Topic</label>\n                    <select value={this.state.choice} onChange={this.handleChoiceChange}>\n                        <option value='a'>Choice A</option>\n                        <option value='b'>Choice B</option>\n                        <option value='c'>Choice C</option>\n                    </select>\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n            \n        )\n    }\n}\n\nexport default Form\n","import React from 'react'\nimport Columns from './Columns'\n\nfunction Table() {\n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <Columns/>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table\n","import React, { PureComponent } from 'react'\n\nclass PureComp extends PureComponent {\n    render() {\n        return (\n            <div>\n                Pure Component {this.props.name}\n            </div>\n        )\n    }\n}\n\nexport default PureComp\n","import React, { Component } from 'react'\n\nclass RegComp extends Component {\n    render() {\n        return (\n            <div>\n                Regular Component {this.props.name}\n            </div>\n        )\n    }\n}\n\nexport default RegComp\n","import React, { Component } from 'react'\n\nvar incAmount = 60;\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             ms: 0, \n             s:0, \n             m: 0,\n             runState: 0\n            //  0 is haven't started, 1 is running, 2 is paused\n        }\n    }\n\n    startTime = () =>{\n        this.myInterval = setInterval( ()=>{\n            this.calculateNewStates()\n         }, incAmount) \n         this.setState({\n            runState: 1\n        })\n    }\n\n    stopTime = () =>{\n        clearInterval(this.myInterval)\n        this.setState({\n            runState: 2\n        })\n    }\n\n    resetTime = () =>{\n        this.setState({\n            ms: 0, \n            s:0, \n            m: 0,\n            runState: 0\n        })\n    }\n\n    calculateNewStates(){\n        const {ms,s,m} = this.state\n        let mNew = m\n        let sNew = s\n        let msNew = ms+incAmount\n        if (msNew>=1000){\n            sNew++\n            msNew-=1000\n        }\n        if (sNew>=60){\n            mNew++\n            sNew-=60\n        }\n\n        this.setState({\n            ms: msNew,\n            s: sNew,\n            m: mNew\n        })\n        \n    }\n    \n    render() {\n        const {ms,s,m} = this.state\n        const {size} = this.props\n        let w = 1.5*size\n        let w2 = 0.25*size\n        return (\n\n            <center><table style={{\n                fontWeight: 'bold',\n                fontSize: size,\n                tableLayout: \"fixed\",\n                textAlign: 'center',\n                color: 'white'\n            }}>\n            <td style={{ width: w }}> {m<10? '0'+m : m} </td>\n            <td style={{ width: w2 }}> : </td>\n            <td style={{ width: w }}> {s<10? '0'+s : s} </td>\n            <td style={{ width: w2 }}> : </td>\n            <td style={{ width: w }}> {ms<100? '0'+ms/10 : ms/10} </td>\n            </table></center>\n\n        )\n    }\n\n\n}\n\nexport default Timer\n","import React, { Component } from 'react'\nimport PureComp from './PureComp'\nimport RegComp from './RegComp'\n\nclass ParentComp extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             name: 'Bob'\n        }\n    }\n\n    componentDidMount(){\n        setInterval( ()=>{\n          this.setState({\n              name: 'Bob'\n          })  \n        } , 2000 )\n    }\n    \n    render() {\n        return (\n            <div>\n               Parent Component\n               <RegComp name={this.state.name}></RegComp>\n               <PureComp name={this.state.name}></PureComp>\n            </div>\n        )\n    }\n}\n\nexport default ParentComp\n","import React, { Component } from 'react'\n\nclass DumbTest extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             name: ''\n        }\n    }\n    \n    componentDidMount(){\n        \n        this.setState({\n            // name: prompt(\"Name\")\n            name: 'Dumbo',\n            clicked: false\n        })\n    }\n\n    clickHandler = ()=>{\n        this.setState({\n            clicked: true\n        })\n    }\n\n    render() {\n        const {name, clicked} = this.state\n        if (clicked){\n            return(\n                <h1>\n                    HA DUMB\n                </h1>\n            )\n        }else{\n            return (\n                <>\n                <h1>\n                    <div> Hi {name}! </div>\n                    <div> Welcome to this page! </div>\n                </h1>\n                <button onClick={this.clickHandler}>Press this button if you are dumb</button>\n                </>\n            ) \n        }\n    }\n}\n\nexport default DumbTest\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            console.log(response)\n            this.setState({\n                posts: response.data\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render() {\n        const{posts} = this.state\n        return (\n            <div>\n                List of posts\n                {\n                    posts.length ?\n                    posts.map(post => <div key = {post.id}> {post.title} </div>)\n                    : <div> hi </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PostList\n","import React, { Component } from 'react'\nimport Timer from './Timer'\n\nclass TimerApp extends Component {\n    constructor(props) {\n        super(props)\n        this.componentRef = React.createRef()\n        this.state ={\n            runState: 0\n        }\n    }\n\n    \n\n    startTime = () =>{\n        this.componentRef.current.startTime()\n        this.setState({\n            runState: 1\n        })\n    }\n\n    stopTime = () =>{\n        this.componentRef.current.stopTime()\n        this.setState({\n            runState: 2\n        })\n    }\n    resetTime = () => {\n        this.componentRef.current.resetTime()\n        this.setState({\n            runState: 0\n        })\n    }\n    \n    render() {\n        const {runState} = this.state\n        return (\n            <>\n            <Timer ref={this.componentRef}/>\n\n            {runState == 0 &&\n                <button onClick={this.startTime}>Start</button>\n            }\n            {runState == 1 && \n                <button onClick={this.stopTime}>Stop</button>\n            }\n            {runState == 2 && \n                <>\n                <button onClick={this.startTime}>Resume</button>\n                <button onClick={this.resetTime}>Reset</button>\n                </>\n            }\n\n            </>\n        )\n    }\n}\n\nexport default TimerApp\n","import React, { Component } from 'react'\n\nvar incAmount = 40;\nconst timerStyle = {\n    fontSize: '7vw',\n    tableLayout: \"fixed\",\n    color: 'white',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: '0',\n    fontFamily: 'Thonburi-Light',\n}\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            ms: 0, \n            s:0, \n            m: 0,\n            colonClickNum: 0\n        }\n    }\n\n    startTime = () =>{\n        this.myInterval = setInterval( ()=>{\n            this.calculateNewStates()\n        }, incAmount)\n        this.props.updateState(1)\n    }\n\n    stopTime = () =>{\n        clearInterval(this.myInterval)\n        this.props.updateState(2)\n    }\n\n    resetTime = () =>{\n        this.setState({\n            ms: 0, \n            s:0, \n            m: 0,\n            colonClickNum: 0\n        })\n        this.props.updateState(0)\n    }\n    \n    calculateNewStates = () =>{\n        const {ms,s,m} = this.state\n        let mNew = m\n        let sNew = s\n        let msNew = ms+incAmount\n        if (msNew>=1000){\n            sNew++\n            msNew-=1000\n        }\n        if (sNew>=60){\n            mNew++\n            sNew-=60\n        }\n\n        this.setState({\n            ms: msNew,\n            s: sNew,\n            m: mNew\n        })\n\n        if (sNew===5){\n            this.stopTime()\n            setTimeout( ()=>{this.props.endGame()} , 5)\n        }\n    }\n\n    handleClickColon = ()=> {\n        this.setState( (prevState) => ({\n            colonClickNum: prevState.colonClickNum + 1\n        }),\n        ()=>{\n            if (this.state.colonClickNum === 5){\n                this.props.toggleCheat()\n            }\n            else if (this.state.colonClickNum === 6){\n                this.props.toggleCheat()\n            }\n        })\n    }\n\n    render() {\n        const {ms, s, m} = this.state\n        return (\n            <table style = {timerStyle} ><thead><tr>\n                <th style={{ width: '3.5vw' }}> {m<10? '0'+m : m} </th>\n                <th style={{ width: '3.5vw' }}>:</th>\n                <th style={{ width: '3.5vw' }}> {s<10? '0'+s : s} </th>\n                <th onClick={this.handleClickColon} style={{ width: '3.5vw' }}>:</th>\n                <th style={{ width: '3.5vw' }}> {ms<100? '0'+ms/10 : ms/10} </th>\n            </tr></thead></table>\n        )\n    }\n}\n\nexport default Timer\n","import React, { Component } from 'react'\n\nconst buttonStyle = {\n    padding: 2,\n    borderRadius: 5,\n    backgroundColor: '#ebebeb',\n    width: '85vw',\n    height: '65vh',\n    fontSize: '5vw',\n    fontFamily: 'Verdana'\n}\n\nclass Button extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             started: false\n        }\n    }\n    \n    startButton = ()=> {\n        if (!this.state.started){\n            this.props.startTime()\n            this.setState({  started: true })\n        }\n        this.props.increment()\n    }\n\n    resetButton = ()=>{\n        this.setState({\n            started: false,\n        })\n        this.props.resetTime()\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.runState===2 && \n                <button style={buttonStyle} onClick={this.resetButton}> Restart </button>\n                }\n\n                {this.props.runState===1 &&\n                <button style={buttonStyle} onClick={this.props.increment}></button>                \n                }\n\n                {this.props.runState===0 &&\n                <button style={buttonStyle} onClick={this.startButton}> Click to start </button>                \n                }\n            </>\n        )\n    }\n}\n\nexport default Button\n","import React, { Component } from 'react'\n\n\nconst buttonStyle = {\n    width: '10vw',\n    backgroundColor: '#e1e3e6',\n    fontFamily: 'Thonburi-Light',\n    fontSize: '1.5vw',\n    borderRadius: 3,    \n}\n\nconst textStyleLeft = {\n    marginLeft: '1vw',\n    marginTop: '1vh',\n    fontFamily: 'Thonburi-Light',\n    fontSize: '2vw',\n    float: 'left'\n}\n\nconst textStyleRight = {\n    marginRight: '1vw',\n    marginTop: '1vh',\n    fontFamily: 'Thonburi-Light',\n    fontSize: '2vw',\n    float: 'right'\n}\n\nclass UserinfoAndShop extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            userID: -1,\n            loggedIn: false, \n            Username: null, \n            clicks: null,\n            updatedClicks: false,\n            spreadSheetRows: null,\n            sheet: null\n        }\n    }\n\n    loadUsers = async()=>{\n        const {doc} = this.props\n        try{\n            await doc.loadInfo(); // loads document properties and worksheets\n            const sheet = doc.sheetsByIndex[1]; // or use doc.sheetsById[id]\n            const rows = await sheet.getRows()\n            this.setState({\n                spreadSheetRows: rows,\n                sheet: sheet\n            })\n\n        }\n        catch (e){\n            this.setState({\n                spreadSheetRows: null\n            })\n        }\n    }\n\n    serachForUser = (inputUsername)=>{\n        //uses binary search\n        const {spreadSheetRows} = this.state\n        let Username = inputUsername.toUpperCase()\n        let low = 0; let high = spreadSheetRows[0].totalUsers-1\n\n        let index = -1\n\n        while (low <= high){\n            let mid = Math.floor((low+high)/2)\n            // if (spreadSheetRows[mid] === undefined || spreadSheetRows[mid].User === undefined ){\n            //     high = mid-1\n            //     continue\n            // }\n\n            let compareName = spreadSheetRows[mid].User.toUpperCase()\n            if (Username < compareName){\n                high = mid-1\n            }\n            else if (Username > compareName){\n                low = mid+1\n            }\n            else{\n                index = mid\n                break\n            }\n        }\n        \n        if (index === -1){\n            //not a user\n            const create = window.confirm(`There are currently no accounts with the username ${inputUsername}\\nWould you like to create an account with this username?`)\n            if (create){\n                this.createAccount(inputUsername)\n            }\n        }\n        else{\n            this.setState({\n                userID: spreadSheetRows[index].ID,\n                loggedIn: true, \n                Username: spreadSheetRows[index].User, \n                clicks: spreadSheetRows[index].Clicks,\n                updatedClicks: this.props.runState === 2\n            })\n        }\n        \n    }\n\n    createAccount = async(Username)=>{\n        const {sheet} = this.state\n        await sheet.addRow({AllUsers: Username, AllClicks: 0, AllCurrBackground: 0, All1: false, All2: false, All3: false})\n        await this.loadUsers()\n        this.serachForUser(Username)\n    }\n\n    login = async() =>{\n        let Username = prompt('Username:')\n        await this.loadUsers()\n        this.serachForUser(Username)\n    }\n    \n    loadShop = ()=>{\n        alert(\"Coming soon in the next update\")\n    }\n\n    updateClicks = ()=>{\n        if (this.state.loggedIn){\n            this.setState((prevState)=>({\n                clicks: prevState.clicks*1 + this.props.count,\n                updatedClicks: true\n            }),\n            ()=>{\n                this.updateClicksToDatabase()\n            }\n            )\n        }\n    }\n\n    updateClicksToDatabase = async()=>{\n        const {sheet, userID,clicks} = this.state\n        const cellAdress = 'C' + (userID*1+2)\n        await sheet.loadCells(cellAdress)\n        sheet.getCellByA1(cellAdress).value = clicks\n        await sheet.saveUpdatedCells()\n        // spreadSheetRows[userID].AllClicks = clicks\n        // await spreadSheetRows[userID].AllClicks.save()\n    }\n\n    resetUpdatedClicks = ()=>{\n        this.setState({\n            updatedClicks: false\n        })\n    }\n\n    render() {\n        const {loggedIn,Username,clicks, updatedClicks} = this.state\n        const {count} = this.props\n        const accountForUpdatedClicks = updatedClicks? count : 0\n        return (\n            <>\n                <span style = {textStyleLeft}>\n                    {loggedIn? \n                        Username\n                        : <button onClick = {this.login} style = {buttonStyle}>Login</button>\n                    }\n                </span>\n                <span style = {textStyleRight}>{clicks && `${ clicks/1+count - accountForUpdatedClicks } clicks`} \n                <button onClick = {this.loadShop} style = {buttonStyle}>Shop</button></span>\n            </>\n        )\n    }\n}\n\nexport default UserinfoAndShop\n","import React, { Component } from 'react'\nimport Timer from './Timer';\nimport Button from './Button';\nimport UserinfoAndShop from './UserinfoAndShop';\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\nconst doc = new GoogleSpreadsheet('1Akjis60TlRufx_PKwCGH3Mc6SzsE7EU49s-V1FpYXKU');\n\n\nconst counterStyle = {\n    fontFamily: 'Thonburi-Light',\n    fontSize: '3vw',\n    fontWeight: 'bold'\n}\n\nclass Game extends Component {\n    constructor(props) {\n        super(props)\n        this.timerRef = React.createRef()\n        this.userinfoRef = React.createRef()\n        this.state = {\n             count: 0,\n             runState: 0,\n             cheatOn: false,\n             spreadSheetRows: null,\n             sheet: null,\n            //  0 is haven't started, 1 is running, 2 is stopped\n        }\n    }\n\n    componentDidMount(){\n        this.accessSpread()\n        this.loadInfo()\n    }\n\n    loadInfo = async()=>{\n        try{\n            await doc.loadInfo(); // loads document properties and worksheets\n            const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]\n            const rows = await sheet.getRows()\n            this.setState({\n                spreadSheetRows: rows,\n                sheet: sheet\n            })\n        }\n        catch{\n            this.setState({\n                spreadSheetRows: null\n            })\n        }\n    }\n\n    accessSpread = async() =>{\n        // use service account creds\n        await doc.useServiceAccountAuth({\n        client_email: 'clickygameserviceaccount@clickygame.iam.gserviceaccount.com',\n        private_key: '-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDPJkEz5SQhfKXS\\n8Sf8AIYSR0OPRRD252LzyRuID4lh59qre+TXvc8AHEQJvcdIavHrvcWxzlOO2DdO\\nOyyBw5O2IGwvVtM+MYjwhpD7squGrIDMfk/JlX3Lv2l2WO8Jky5pFuEOjEbak2ld\\nLJTjoBvb6LCcIIHLVHEDaVpabAzt9GBlNKZLy58vajDFMFI2c3zR2dn8aCEctGVf\\nk79cbGy6TLal+LN04uq5MKBBch3dmfSClYoO6ui2rdTQ8+5BlaYdp/vRpZL0gf2r\\nPOLQ9S9PgMTW92gTj0/Lb6OLizz8NirDA1hJc7nMwWwIffbWXR7uOmCmmgf0Vme7\\nGSzI9gEHAgMBAAECggEAIZypc8w4gp6BIaszu7YyCwE5OyQPzqBY9Amrx/YNaq9+\\nUdj2lvMbhX8QoywCDAQeYQwX6fP6pvD6eF0tqZicfS7hnwTNngfXmn+bQtwI7P9M\\nnuHX/HOfR9I1QJjJoJobK74kooGsdYb5z76OIik2nAYzsgGsTdvTwqPznzxtFKcJ\\nqRR+p8FQCqFUJqbTedRxacbYKeeF7ex5mJ/jC8bLgX+ZHJHGgryl4+t29jaDHN7C\\nWTiMzgAIIdyAKeZpcRB89AvEe1QtJhiHrW1NufuBMWtviWbiLPA4JrdHYZi0NQHX\\naPx0EMLsDVxsBLjvNSj8kxwUOCMtbvB2Dpg+UyE6QQKBgQD0HoDxvizzzW2Jh/oa\\n0Wk8bVXwZiS1N+qwaDx3MTJwv9z2Bc3KvJIWoG/XACLPC7Bt91f3uTneN4Rz+Nvh\\nFgvlf4nTWke+RWQYaEwNcCSQxnmwsUO4NHP/l4w/H12K3AySO2YwCM5eQmvOGWAr\\naM4FrTpL0aELtAslyMFwsJ2rdwKBgQDZOySRvJB4ilmCyr3kkLY0TWX3VtAEGeKD\\nr1MmL1KnLvyqVFBj0hhJzbTrsDS/KbAnEWfkglouCDjhlKx1LmFniDGAKh9GmCh+\\nUsH1US99VuQZwqcIzdxDFYVbo390dKj74ttKT8nhxMYnB8sH5h2SxpgAs3n7kwOK\\nxLETBC6a8QKBgQDRpSijcujz72W0iLw3L8QqitMVAwNfRcgc+0eCLRPeVEcUWWOk\\nSlFDcUDa6Vj7alR3+8TmD4Is3oy3c+6Q3PgWfXMFuTCHrNwLQfaeS8J7OpfjMDiy\\nBwnfZGyjAPK6f8OkCbL2aXmg5XXjp1M5tGXJ5jx8RGkDvfkc182YU3T0fQKBgF3Y\\nBvxOkbsBSZoPK+nJ+myt4xbvEf4zkH+DBlDAsNw4mD6dHf2BjayUiUwoWyEaSVcX\\nVeKJzZuFQc1yBO66kqm/VGMhz1EX+qZX6iKoZ/OlzfSy+qX7COSSL4JfJ3iPzVDD\\nuChqP7Sg5VmHLFbFOpFl6dSjtFbSM/2G61hjvh6BAoGAGJixYzEOk7YA7HsoCBOl\\n1UqGexkV7He76TF96KLASmgNXPoEUGwzYarsBY38tHIAFWA5JPdB/NuE0/SPvGLy\\nxp2F9/vpRpxtE5IMRZkYi66lUULNCPKn9qtsfkcNwGIK5+7nB6OOqJcacgYpDhBL\\nCngqIonrFCJ86nbNRdGf+e0=\\n-----END PRIVATE KEY-----\\n'\n        });\n    }\n    \n\n    toggleCheat = ()=>{\n        this.setState((prevState)=>({\n            cheatOn: !prevState.cheatOn\n        }))\n    }\n\n    increment = () =>{\n        if (this.state.cheatOn){\n            this.setState((prevState) => ({\n                count: prevState.count + 1.3\n            }))\n        }\n        else{\n            this.setState((prevState) => ({\n                count: prevState.count + 1\n            }))\n        }\n    }\n\n    updateState = (newState)=>{\n        this.setState({\n            runState: newState\n        })\n    }\n\n    endGame = ()=>{\n        this.userinfoRef.current.updateClicks()\n        this.alertScore()\n    }\n\n    alertScore = ()=>{\n        const {spreadSheetRows} = this.state\n        let count = Math.floor(this.state.count)\n        let score = count/5\n        let message\n        if (count < 15){\n            message = \"You're about as fast as a Sanjay. SMH slowpoke\"\n        }\n        else if (count < 30){\n            message = 'Bruh my grandma could click faster and she has arthritis'\n        }\n        else if (count < 45){\n            message = \"Mehh, it's alright I guess?\"\n        }\n        else if (count<60){\n            message = \"Damn your fast. Want a cookie?\"\n        }\n        else{\n            message = \"Good job! You deserve a cookie!\"\n        }\n        message += `\\n\\nYou clicked ${count} times in 5 seconds!\\nThat's a whopping ${score} clicks per second!\\n`\n        message += '\\nHigh Scores:\\n'\n        let added = false\n        for (let i = 0; i<5; i++){\n            if (spreadSheetRows==null) {\n                message+='\\nError: Could not load high scores'\n                break\n            }\n            if (!added && score > spreadSheetRows[i].Score){\n                added = true\n                let userName = prompt(`Congrats your score of ${score} is high enough for the leader boards!\\n\\nName:`)\n                this.addScore(userName,score,i)\n            }\n            message+= `\\n${i+1}. ${spreadSheetRows[i].Name}: ${spreadSheetRows[i].Score} CPS`\n        }\n        message+='\\n'\n        alert(message)\n    }\n\n    addScore = async(userName, userScore, row)=>{\n        const {spreadSheetRows,sheet} = this.state\n\n        for (let j = 3; j>=row; j--){\n            spreadSheetRows[j+1].Name = spreadSheetRows[j].Name\n            spreadSheetRows[j+1].Score = spreadSheetRows[j].Score\n        }\n        spreadSheetRows[row].Name = userName\n        spreadSheetRows[row].Score = userScore\n        this.setState({\n            spreadSheetRows: spreadSheetRows\n        })\n        await sheet.addRow({ AllNames: userName, AllScores: userScore})\n    }\n\n    startTime = () => {this.timerRef.current.startTime()}\n    \n    resetTime = ()=> {\n        this.loadInfo()\n        this.timerRef.current.resetTime()\n        this.setState({ \n            count: 0,\n            cheatOn: false\n        }) \n        //runState is updated by the timer resetTime\n        this.userinfoRef.current.resetUpdatedClicks()\n    }\n    \n    render() {\n        const {runState, count} = this.state\n        return (\n            <>\n            <UserinfoAndShop\n                doc = {doc}\n                count = {count}\n                runState = {runState}\n                ref = {this.userinfoRef}\n            />\n            <Timer\n                ref = {this.timerRef}\n                updateState = {this.updateState}\n                endGame = {this.endGame}\n                toggleCheat = {this.toggleCheat}\n            />\n            <div style = {counterStyle}> Count: {Math.floor(count)} </div>\n            <Button  \n                startTime={this.startTime} \n                resetTime={this.resetTime} \n                increment={this.increment}\n                runState={runState}\n            />\n\n            </>\n        )\n    }\n}\n\nexport default Game\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Hello from './components/Hello'\nimport Message from './components/Message'\nimport Counter from './components/Counter';\nimport FunctionClick from './components/FunctionClick';\nimport ClassClick from './components/ClassClick';\nimport ParentComponent from './components/ParentComponent';\nimport ConditionalGreetings from './components/ConditionalGreetings';\nimport NameList from './components/NameList';\nimport Form from './components/Form';\nimport FragmentDemo from './components/FragmentDemo';\nimport Table from './components/Table';\nimport PureComp from './components/PureComp';\nimport ParentComp from './components/ParentComp';\nimport Timer from './components/Timer';\nimport DumbTest from './components/DumbTest';\nimport PostList from './components/PostList';\nimport TimerApp from './components/TimerApp';\nimport ClickyGame from './ClickyGameComponents/Game';\nimport SpreadSheet from './components/SpreadSheet';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n\n        {/* <HighScore/> */}\n        <ClickyGame /> \n        {/* <SpreadSheet/> */}\n\n        {/* <PostList/> */}\n\n        {/* <DumbTest/> */}\n\n        {/* <ParentComp/> */}\n        {/* <Table/> */}\n        {/* <FragmentDemo /> */}\n        {/* <Form /> */}\n        {/* <NameList/> */}\n        {/* <ConditionalGreetings /> */}\n        {/* <ParentComponent /> */}\n        {/* <FunctionClick /> */}\n        {/* <ClassClick /> */}\n\n        {/* <Hello name='Bob' age={1}/>\n        <Hello name='Joe' age={2}/>\n        <Hello name='BobJoe' age={3} /> */}\n        \n        {/* <Message /> */}\n\n        {/* <Counter /> */}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass SpreadSheet extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://spreadsheets.google.com/feeds/cells/1cOxqRbxTG_crYyEWRMvpAAVqYz-F22rKIHgDdSMfE7g/od6/public/basic?alt=json')\n        .then(response => {\n            console.log(response.data.feed.entry)\n            this.setState({\n                posts: response.data.feed.entry\n            })\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render() {\n        const{posts} = this.state\n        return (\n            <div>\n                List of posts\n                {\n                    posts.length ?\n                    posts.map(post => <div key = {post.id.$t}> {post.content.$t} </div>)\n                    : <div> no data </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default SpreadSheet\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}